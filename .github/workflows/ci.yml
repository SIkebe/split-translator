name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '22'
  CACHE_DEPENDENCY_PATH: 'package-lock.json'

jobs:
  test:
    name: 🧪 Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      matrix:
        test-type: [unit]
        
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🏗️ Build project
        run: npm run build

      - name: 🧪 Run ${{ matrix.test-type }} tests
        run: npm run test:${{ matrix.test-type }}

      - name: 📊 PR Test Summary
        run: |
          echo "## 🧪 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ Build: Successful" >> $GITHUB_STEP_SUMMARY
          echo "✅ Unit Tests: Passed" >> $GITHUB_STEP_SUMMARY

  e2e-tests:
    name: 🎭 E2E Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.CACHE_DEPENDENCY_PATH }}

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: 🎭 Install Playwright browsers
        run: npx playwright install chromium

      - name: 🖥️ Setup virtual display (Xvfb)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: 🏗️ Build project
        run: npm run build

      - name: 🧪 Run E2E smoke tests
        run: npm run test:e2e:smoke

      - name: 📊 E2E Test Summary
        run: |
          echo "## 🎭 E2E Test Results" >> $GITHUB_STEP_SUMMARY
          echo "✅ Build: Successful" >> $GITHUB_STEP_SUMMARY
          echo "✅ E2E Smoke Tests: Passed" >> $GITHUB_STEP_SUMMARY
